name: Publish on PR Merge

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  publish-extension:
    # Only run if the PR was merged (not just closed)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write # Still needed to push tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history for tag checking later
          fetch-depth: 0
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Get current version from package.json
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Publish to VS Code Marketplace
        id: publish # Added ID to check outcome later if needed
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          VERSION=${{ steps.package-version.outputs.current-version }}
          echo "Attempting to publish version ${VERSION}..."
          vsce publish --packagePath .

      - name: Create and Push Git Tag (Best Effort)
        # Run this even if publish failed, maybe tag still desired? Adjust if needed.
        if: always()
        env:
          VERSION: ${{ steps.package-version.outputs.current-version }}
        run: |
          echo "Attempting to create and push tag v${VERSION}..."
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          # Attempt to create tag
          git tag -a "v${VERSION}" -m "Release version ${VERSION}" || echo "Tag v${VERSION} likely already exists."
          # Attempt to push tag
          git push origin "v${VERSION}" || echo "Pushing tag v${VERSION} failed (likely already exists remotely)."

      - name: Add completion comment to PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const version = "${{ steps.package-version.outputs.current-version }}" // Get version directly
            const prNumber = context.payload.pull_request.number
            const repo = context.repo
            // Optionally check job/step status here: steps.publish.outcome == 'success'
            
            await github.rest.issues.createComment({
              owner: repo.owner,
              repo: repo.repo,
              issue_number: prNumber,
              body: `âœ… PR merged. Attempted publishing version \`${version}\`. Tag \`v${version}\` created/pushed.` // Simplified comment 
            }) 